# =80
#
# Redirect ip to https.
server {
  listen       80;
  listen       [::]:80;
  server_name  123.456.789.123 [IPv6 address];
  return 301   https://example.com$request_uri;
}

# Redirect http and www to https.
server {
  listen       80;
  listen       [::]:80;
  server_name  example.com www.example.com reverse.dns.vps-provider.com;
  return 301   https://example.com$request_uri;
}

# =443
#
# Config for the default server.
server {
  listen               443 ssl http2 default_server;
  listen               [::]:443 ssl http2;
  server_name          example.com www.example.com;

  root                 /var/www/example.com/public_html/;
  index                index.html;
  error_page 404       404.html;
  
  location / {
    try_files          $uri $uri/ =404;
  }

  access_log           /var/log/nginx/example.com.access.log main;
  error_log            /var/log/nginx/example.com.error.log notice;

  gzip                 on;
  gzip_comp_level      3;
  gzip_types           application/javascript image/* text/css text/plain;

  # =HEADERS
  #
  # Disable content sniffing.
  add_header           X-Content-Type-Options nosniff;
  # Deny content embedding.
  add_header           X-Frame-Options DENY;
  # Tell browser to enable cross-site scripting filter.
  add_header           X-XSS-Protection "1; mode=block";
  # Set refer policy.
  add_header           Referrer-Policy strict-origin-when-cross-origin;
  # Set content security policy
  add_header           Content-Security-Policy "default-src 'self'; upgrade-insecure-requests;";
  # Set HSTS.
  add_header           Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

  # =SSL & TSL
  #
  # Certificates via Let's Encrypt (manually generated).
  ssl_certificate      /etc/letsencrypt/live/example.com/fullchain.pem;
  ssl_certificate_key  /etc/letsencrypt/live/example.com/privkey.pem;
  include              /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam          /etc/letsencrypt/ssl-dhparams.pem;
}
